/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsNumber,
  IsDate,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { Decimal } from "decimal.js";
import { Type } from "class-transformer";
import { FavoriteRestaurantUpdateManyWithoutRestaurantsInput } from "./FavoriteRestaurantUpdateManyWithoutRestaurantsInput";
import { MenuUpdateManyWithoutRestaurantsInput } from "./MenuUpdateManyWithoutRestaurantsInput";
import { OrderUpdateManyWithoutRestaurantsInput } from "./OrderUpdateManyWithoutRestaurantsInput";
import { ReservationUpdateManyWithoutRestaurantsInput } from "./ReservationUpdateManyWithoutRestaurantsInput";
import { RestaurantDetailUpdateManyWithoutRestaurantsInput } from "./RestaurantDetailUpdateManyWithoutRestaurantsInput";
import { ReviewUpdateManyWithoutRestaurantsInput } from "./ReviewUpdateManyWithoutRestaurantsInput";

@InputType()
class RestaurantUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  averageCost?: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  closingHours?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FavoriteRestaurantUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => FavoriteRestaurantUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => FavoriteRestaurantUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  favoriteRestaurants?: FavoriteRestaurantUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  filterTag?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hashtags?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => MenuUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => MenuUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => MenuUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  menus?: MenuUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  openingHours?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReservationUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => ReservationUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => ReservationUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  reservations?: ReservationUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => RestaurantDetailUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => RestaurantDetailUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => RestaurantDetailUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  restaurantDetails?: RestaurantDetailUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareSlug?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { RestaurantUpdateInput as RestaurantUpdateInput };
