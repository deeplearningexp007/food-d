/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
} from "class-validator";
import { CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput } from "./CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput";
import { Type } from "class-transformer";
import { SubscriptionPlanWhereUniqueInput } from "../../subscriptionPlan/base/SubscriptionPlanWhereUniqueInput";
import { UserModelWhereUniqueInput } from "../../userModel/base/UserModelWhereUniqueInput";

@InputType()
class SubscriptionCreateInput {
  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  autoRenew!: boolean;

  @ApiProperty({
    required: false,
    type: () => CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput,
  })
  @ValidateNested()
  @Type(() => CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput)
  @IsOptional()
  @Field(() => CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput, {
    nullable: true,
  })
  customerSubscriptions?: CustomerSubscriptionCreateNestedManyWithoutSubscriptionsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  paymentStatus!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  status!: string;

  @ApiProperty({
    required: true,
    type: () => SubscriptionPlanWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionPlanWhereUniqueInput)
  @Field(() => SubscriptionPlanWhereUniqueInput)
  subscriptionPlans!: SubscriptionPlanWhereUniqueInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;

  @ApiProperty({
    required: true,
    type: () => UserModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserModelWhereUniqueInput)
  @Field(() => UserModelWhereUniqueInput)
  userModels!: UserModelWhereUniqueInput;
}

export { SubscriptionCreateInput as SubscriptionCreateInput };
