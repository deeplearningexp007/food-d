/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Hashtag } from "@prisma/client";

export class HashtagServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.HashtagCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagCountArgs>
  ): Promise<number> {
    return this.prisma.hashtag.count(args);
  }

  async hashtags<T extends Prisma.HashtagFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagFindManyArgs>
  ): Promise<Hashtag[]> {
    return this.prisma.hashtag.findMany(args);
  }
  async hashtag<T extends Prisma.HashtagFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagFindUniqueArgs>
  ): Promise<Hashtag | null> {
    return this.prisma.hashtag.findUnique(args);
  }
  async createHashtag<T extends Prisma.HashtagCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagCreateArgs>
  ): Promise<Hashtag> {
    return this.prisma.hashtag.create<T>(args);
  }
  async updateHashtag<T extends Prisma.HashtagUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagUpdateArgs>
  ): Promise<Hashtag> {
    return this.prisma.hashtag.update<T>(args);
  }
  async deleteHashtag<T extends Prisma.HashtagDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HashtagDeleteArgs>
  ): Promise<Hashtag> {
    return this.prisma.hashtag.delete(args);
  }
}
