/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsString,
  ValidateNested,
  IsBoolean,
  IsNumber,
} from "class-validator";
import { FavoriteMenuItem } from "../../favoriteMenuItem/base/FavoriteMenuItem";
import { Type } from "class-transformer";
import { MenuItemCategory } from "../../menuItemCategory/base/MenuItemCategory";
import { Menu } from "../../menu/base/Menu";
import { OrderItem } from "../../orderItem/base/OrderItem";
import { Decimal } from "decimal.js";

@ObjectType()
class MenuItem {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  availableQuantity!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    type: () => [FavoriteMenuItem],
  })
  @ValidateNested()
  @Type(() => FavoriteMenuItem)
  @IsOptional()
  favoriteMenuItems?: Array<FavoriteMenuItem>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  hashtags!: string | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  imageUrl!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  ingredients!: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive!: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isVegetarian!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [MenuItemCategory],
  })
  @ValidateNested()
  @Type(() => MenuItemCategory)
  @IsOptional()
  menuItemCategoriesMenuItemCategoriesMenuItemIdToMenuItems?: Array<MenuItemCategory>;

  @ApiProperty({
    required: false,
    type: () => MenuItemCategory,
  })
  @ValidateNested()
  @Type(() => MenuItemCategory)
  @IsOptional()
  menuItemCategoriesMenuItemsCategoryIdToMenuItemCategories?: MenuItemCategory | null;

  @ApiProperty({
    required: false,
    type: () => Menu,
  })
  @ValidateNested()
  @Type(() => Menu)
  @IsOptional()
  menus?: Menu | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [OrderItem],
  })
  @ValidateNested()
  @Type(() => OrderItem)
  @IsOptional()
  orderItems?: Array<OrderItem>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  preparationTime!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  price!: Decimal | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shareSlug!: string | null;
}

export { MenuItem as MenuItem };
